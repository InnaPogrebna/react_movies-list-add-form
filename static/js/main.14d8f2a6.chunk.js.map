{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","errorImdb","errorImg","validImdb","validImg","disabled","handleChange","event","validUrl","RegExp","target","name","value","setState","test","reset","validation","onAdd","preventDefault","newMovie","props","addMovie","borderStyle","valid","border","this","onSubmit","htmlFor","type","placeholder","onChange","required","style","Component","App","moviesFromServer","prevState","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14d8f2a6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movies: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  errorImg: string,\n  errorImdb: string,\n  validImdb: boolean,\n  validImg: boolean,\n  disabled: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errorImdb: '',\n    errorImg: '',\n    validImdb: true,\n    validImg: true,\n    disabled: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line max-len\n    const validUrl = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    } as unknown as Pick<State, keyof State>);\n\n    if (name === 'imgUrl') {\n      this.setState({\n        validImg: validUrl.test(value),\n      });\n    }\n\n    if (name === 'imdbUrl') {\n      this.setState({\n        validImdb: validUrl.test(value),\n      });\n    }\n\n    this.setState({\n      disabled: false,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  validation = () => {\n    const {\n      validImdb,\n      validImg,\n    } = this.state;\n\n    if (!validImdb || !validImg) {\n      this.setState({\n        errorImdb: \"Your imdbUrl isn't validation\",\n        errorImg: \"Your imgUrl isn't validation\",\n        disabled: (!validImdb || !validImg),\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  onAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (this.validation()) {\n      const newMovie = {\n        title: this.state.title,\n        description: this.state.description,\n        imgUrl: this.state.imgUrl,\n        imdbUrl: this.state.imdbUrl,\n        imdbId: this.state.imdbId,\n      };\n\n      this.props.addMovie(newMovie);\n      this.reset();\n    }\n  };\n\n  borderStyle = (valid: boolean) => {\n    return !valid ? { border: '1px solid red' }\n      : { border: '' };\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errorImg,\n      errorImdb,\n      validImdb,\n      validImg,\n      disabled,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.onAdd}>\n        <div className=\"input-field\">\n          <label\n            htmlFor=\"first_name\"\n          >\n            First Name\n          </label>\n          <input\n            className=\"input-field__input\"\n            value={title}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"First name\"\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n        <div className=\"input-field\">\n          <label\n            htmlFor=\"description\"\n          >\n            Description\n          </label>\n          <input\n            className=\"input-field__input\"\n            value={description}\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label\n            htmlFor=\"imgUrl\"\n          >\n            imgUrl\n          </label>\n          <input\n            className=\"input-field__input\"\n            value={imgUrl}\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"url\"\n            style={this.borderStyle(validImg)}\n            onChange={this.handleChange}\n            required\n          />\n          {!validImg\n            && (\n              <p className=\"form__error\">\n                {errorImg}\n              </p>\n            )}\n        </div>\n        <div className=\"input-field\">\n          <label\n            htmlFor=\"imdbUrl\"\n          >\n            imdbUrl\n          </label>\n          <input\n            className=\"input-field__input\"\n            value={imdbUrl}\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"url\"\n            style={this.borderStyle(validImdb)}\n            required\n            onChange={this.handleChange}\n          />\n          {!validImdb\n            && (\n              <p className=\"form__error\">\n                {errorImdb}\n              </p>\n            )}\n        </div>\n        <div className=\"input-field\">\n          <label\n            htmlFor=\"imdbId\"\n          >\n            ImdbId\n          </label>\n          <input\n            className=\"input-field__input\"\n            value={imdbId}\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"urlId\"\n            required\n            onChange={this.handleChange}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"button-form\"\n          disabled={disabled}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[],\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((prevState) => ({\n      movies: [...prevState.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}